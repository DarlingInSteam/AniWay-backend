openapi: 3.0.0
# servers:
#   # Added by API Auto Mocking Plugin
#   - description: SwaggerHub API Auto Mocking
#     url: https://virtserver.swaggerhub.com/DANILKA108_1/AniWay/1.0.0
info:
  version: 1.0.0
  title: AniWay
  description: The API for AniWay service
paths:
  /auth/login:
    post:
      summary: LoginRequest
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '401':
          description: Invalid password or login
        '200':
          description: Successfull auth
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
  /manga/{mangaId}/page:
    get:
      summary: Get manga page
      tags:
        - Manga
      responses:
        '200':
          description: Manga page
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MangaPageResponse'
      parameters: 
      - name: mangaId
        in: path
        required: true
        description: manga ID
        schema: 
          type: number
  /manga/{mangaId}/preview:
    get:
      summary: Get manga preview
      tags:
        - Manga
      responses:
        '200':
          description: Manga preview
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MangaPreviewResponse'
      parameters: 
      - name: mangaId
        in: path
        required: true
        description: manga ID
        schema: 
          type: number
  /comment/{commentId}:
    get:
      summary: Get comment
      tags: 
        - Comment
      responses: 
        '200':
          description: comment
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
      parameters:
      - name: commentId
        in: path
        required: true
        description: comment ID
        schema: 
          type: number
  /user/{userId}:
    get:
      summary: Get user
      tags:
        - User
      responses:
        '200':
          description: user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserResponse'
      parameters:
      - name: userId
        in: path
        required: true
        description: user ID
        schema: 
          type: number
    put:
      summary: Update user info
      tags: 
        - User
      parameters:
      - name: userId
        in: path
        required: true
        description: user ID
        schema: 
          type: number
      requestBody:
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutUserRequest'
      responses:
        '200':
          description: update user
components:
  schemas:
    LoginRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    LoginResponse:
      type: object
      properties:
        userId:
          type: integer
        accessToken:
          type: string
        refreshToken:
          type: string
    MangaPreviewResponse:
      type: object
      properties:
        name:
          type: string
        description:
          type: array
          items:
            type: string
        likes_count:
          type: integer
        views_count:
          type: integer
        chapters_count:
          type: integer
        type:
          type: string
        rating:
          type: number
    MangaPageResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: array
          items:
            type: string
        year:
          type: string
        status:
          type: string
        type:
          type: string
        bookmarks_count:
          type: integer
        likes_count:
          type: integer
        views_count:
          type: integer
        chapters_count:
          type: integer
        gengers:
          type: array
          items:
            type: string
        similar:
          type: array
          items:
            type: integer
        is_in_favorites:
          type: boolean
        rating:
          type: number
        comments:
          type: array
          items: 
            type: integer
    Comment:
      type: object
      properties:
        id:
          type: integer
        userId: 
          type: integer
        message:
          type: string
        mangaId: 
          type: integer
    GetUserResponse:
      type: object
      properties:
        id: 
          type: integer
        nickname: 
          type: string
        xp_level:
          type: integer
        badge:
          type: integer
        chapters_read_count: 
          type: integer
        chapters_likes_count: 
          type: integer
        comments_count:
          type: integer 
        favorite:
          type: array
          items:
            type: integer
        achievements: 
          type: array
          items:
            type: string
        comments: 
          type: array
          items:
            type: integer
    PutUserRequest:
      type: object
      properties:
        nickname: 
          type: string
          minLength: 3
          maxLength: 20
        badge: 
          type: integer
        sex:
          type: string
          enum: 
            - male
            - female
        is_hentai_hidden:
          type: boolean
        is_yuri_hidden:
          type: boolean
        is_yaoi_hidden:
          type: boolean
          
            
      
        
              
            
          
    

