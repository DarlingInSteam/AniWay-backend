openapi: 3.0.0
# servers:
#   # Added by API Auto Mocking Plugin
#   - description: SwaggerHub API Auto Mocking
#     url: https://virtserver.swaggerhub.com/DANILKA108_1/AniWay/1.0.0
info:
  version: 1.0.0
  title: AniWay
  description: The API for AniWay service
security:
  - UserAuth:
    - reader
    - translator
paths:
  /user/{userId}/page:
    get:
      summary: Get user
      tags:
        - User
      responses:
        '200':
          description: user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPage'
      parameters:
        - $ref: '#/components/parameters/UserId'
  # /user/{userId}:
  #   post:
  #     summary: Create user
  #     tags: 
  #       - User
  #     parameters:
  #       - $ref: '#/components/parameters/UserId'
  #     requestBody:
  #       content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/UserCreation'
  #     responses:
  #       '200':
  #         description: User created successfully
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/AuthData'
  #   delete:
  #     summary: Delete user
  #     security:
  #       - Auth: [reader_user, translator_user]
  #     tags:
  #       - User
  #     parameters:
  #       - $ref: '#/components/parameters/UserId'
  #     responses:
  #       '200':
  #         description: User deleted successfully
  /user/{userId}/settings:
    get:
      summary: Get user settings
      tags:
        - User
      parameters:
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          description: user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSettings'
    put:
      summary: Update user settings
      tags: 
        - User
      parameters:
        - $ref: '#/components/parameters/UserId'
      requestBody:
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSettings'
      responses:
        '200':
          description: User updated successfully
  /manga/{mangaId}:
    post:
      summary: Create manga
      security:
        - UserAuth: [translator]
      tags:
        - Manga
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MangaCreation'
      responses:
        '200':
          description: Manga created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
    get:
      summary: Get manga info
      tags:
        - Manga
      responses:
        '200':
          description: Manga page
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MangaPage'
                  - $ref: '#/components/schemas/MangaPreview'
      parameters: 
      - name: typeOfContent
        in: query
        required: true
        schema:
          type: string
          enum: ["preview", "page"]
      - name: mangaId
        in: path
        required: true
        description: manga ID
        schema: 
          type: number
  /comment/{commentId}:
    get:
      summary: Get comment
      tags: 
        - Comment
      responses: 
        '200':
          description: comment
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
      parameters:
      - name: commentId
        in: path
        required: true
        description: comment ID
        schema: 
          type: number
components:
  parameters:
    UserId:
        name: userId
        in: path
        required: true
        description: user ID
        schema: 
          type: number
  securitySchemes:
    UserAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    AdminAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    MangaPreview:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: array
          items:
            type: string
        likes_count:
          type: integer
        views_count:
          type: integer
        chapters_count:
          type: integer
        type:
          type: string
        rating:
          type: number
    MangaPage:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          maxLength: 100
        description:
          type: array
          items:
            type: string
        year:
          type: string
        status:
          type: string
          enum:
            - "ongoing"
            - "finished"
            - "freezed"
            - "announced" 
        type:
          type: string
          enum:
            - "manhwa"
            - "manhua"
            - "manga"
            - "cartoon"
        bookmarks_count:
          type: integer
        likes_count:
          type: integer
        views_count:
          type: integer
        chapters_count:
          type: integer
        gengers:
          type: array
          items:
            type: string
        similar:
          type: array
          items:
            type: integer
        is_in_favorites:
          type: boolean
        rating:
          type: number
        comments:
          type: array
          items: 
            type: integer 
    MangaCreation:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
        description:
          type: array
          items:
            type: string
        year:
          type: string
        status:
          type: string
          enum:
            - "ongoing"
            - "finished"
            - "freezed"
            - "announced" 
        type:
          type: string
          enum:
            - "manhwa"
            - "manhua"
            - "manga"
            - "cartoon"
        gengers:
          type: array
          items:
            type: string
    Comment:
      type: object
      properties:
        id:
          type: integer
        userId: 
          type: integer
        message:
          type: string
          maxLength: 350
        mangaId: 
          type: integer
    UserPage:
      type: object
      properties:
        id:
          type: integer
        nickname: 
          type: string
          minLength: 3
          maxLength: 20
        xp_level:
          type: integer
        badge:
          type: integer
        chapters_read_count: 
          type: integer
        chapters_likes_count: 
          type: integer
        comments_count:
          type: integer 
        favorite:
          type: array
          items:
            type: integer
        achievements: 
          type: array
          items:
            type: string
        comments: 
          type: array
          items:
            type: integer
    UserCreation:
      type: object
      properties:
        nickname:
          type: string
        sex:
          type: string
          enum: 
            - male
            - female
        email:
          type: string
        password:
          type: string
          maxLength: 100
          minLength: 8
    AuthData:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
    UserSettings:
      type: object
      properties:
        nickname: 
          type: string
          minLength: 3
          maxLength: 20
        badge: 
          type: integer
        sex:
          type: string
          enum: 
            - male
            - female
        is_hentai_hidden:
          type: boolean
        is_yuri_hidden:
          type: boolean
        is_yaoi_hidden:
          type: boolean
    Badge:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          maxLength: 20
      required:
        - id
        - name
    Chapter:
      type: object
      properties:
        id:
          type: integer
        manga_id:
          type: integer
        name:
          type: string
          maxLength: 100
        number:
          type: integer
    translator_user:
      type: object
      properties:
        id:
          type: integer
        nickname:
          type: string
        user_id:
          type: integer
